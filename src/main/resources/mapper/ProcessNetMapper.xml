<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.jingsai.mapper.ProcessNetMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.jingsai.model.ProcessNet">
        <id column="id" property="id" />
        <result column="pid" property="pid" />
        <result column="proto" property="proto" />
        <result column="local_address" property="localAddress" />
        <result column="foreign_address" property="foreignAddress" />
        <result column="state" property="state" />
        <result column="pid_program_name" property="pidProgramName" />
        <result column="create_time" property="createTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, pid, proto, local_address, foreign_address, state, pid_program_name, create_time
    </sql>

    <sql id="Base_Column_List_No_Id">
        pid, proto, local_address, foreign_address, state, pid_program_name, create_time
    </sql>

    <insert id="saveBatch">
        INSERT INTO process_net
        (<include refid="Base_Column_List_No_Id"/>)
        VALUES
        <foreach collection="list" item="processNet" separator=",">
            (
            #{processNet.pid},
            #{processNet.proto},
            #{processNet.localAddress},
            #{processNet.foreignAddress},
            #{processNet.state},
            #{processNet.pidProgramName},
            #{processNet.createTime}
            )
        </foreach>
    </insert>

    <select id="selectByMaxId" resultType="com.example.jingsai.model.ProcessNet">
        SELECT <include refid="Base_Column_List"/>
        FROM process_net
        WHERE pid = #{pid} AND id IN (SELECT max(id) FROM process_net WHERE pid = #{pid});
    </select>

    <delete id="rollback">
        DELETE FROM process_net ORDER BY id LIMIT #{delCount}
    </delete>

    <select id="selectTcp" resultType="com.example.jingsai.model.ProcessNet">
        SELECT local_address,foreign_address
        FROM process_net
        <where>
            proto LIKE 'tcp%'
            <if test="pid != -1">
                AND pid = #{pid}
            </if>
            <if test="beginTm != -1">
                AND create_time &gt;= #{beginTm}
            </if>
            <if test="endTm != -1">
                AND create_time &lt;= #{endTm}
            </if>
        </where>
        GROUP BY local_address,foreign_address
    </select>

    <select id="selectTcpEstablished" resultType="com.example.jingsai.model.ProcessNet">
        SELECT local_address,foreign_address
        FROM process_net
        <where>
            state = 'ESTABLISHED'
            AND proto LIKE 'tcp%'
            <if test="pid != -1">
                AND pid = #{pid}
            </if>
            <if test="beginTm != -1">
                AND create_time &gt;= #{beginTm}
            </if>
            <if test="endTm != -1">
                AND create_time &lt;= #{endTm}
            </if>
        </where>
        GROUP BY local_address,foreign_address
    </select>

</mapper>
